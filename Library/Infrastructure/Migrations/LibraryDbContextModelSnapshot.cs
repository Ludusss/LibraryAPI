// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableCopies")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PageCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalCopies")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Isbn")
                        .IsUnique();

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "F. Scott Fitzgerald",
                            AvailableCopies = 3,
                            Description = "A classic American novel set in the Jazz Age.",
                            Genre = "Classic Fiction",
                            Isbn = "9780743273565",
                            PageCount = 180,
                            PublicationDate = new DateTime(1925, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Great Gatsby",
                            TotalCopies = 3
                        },
                        new
                        {
                            Id = 2,
                            Author = "Harper Lee",
                            AvailableCopies = 2,
                            Description = "A gripping tale of racial injustice and childhood innocence.",
                            Genre = "Classic Fiction",
                            Isbn = "9780061120084",
                            PageCount = 376,
                            PublicationDate = new DateTime(1960, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "To Kill a Mockingbird",
                            TotalCopies = 2
                        },
                        new
                        {
                            Id = 3,
                            Author = "George Orwell",
                            AvailableCopies = 4,
                            Description = "A dystopian social science fiction novel.",
                            Genre = "Dystopian Fiction",
                            Isbn = "9780452284234",
                            PageCount = 328,
                            PublicationDate = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "1984",
                            TotalCopies = 4
                        },
                        new
                        {
                            Id = 4,
                            Author = "Jane Austen",
                            AvailableCopies = 2,
                            Description = "A romantic novel of manners.",
                            Genre = "Romance",
                            Isbn = "9780141439518",
                            PageCount = 432,
                            PublicationDate = new DateTime(1813, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pride and Prejudice",
                            TotalCopies = 2
                        },
                        new
                        {
                            Id = 5,
                            Author = "J.D. Salinger",
                            AvailableCopies = 3,
                            Description = "A controversial novel about teenage rebellion.",
                            Genre = "Coming-of-Age Fiction",
                            Isbn = "9780316769174",
                            PageCount = 234,
                            PublicationDate = new DateTime(1951, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Catcher in the Rye",
                            TotalCopies = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Borrower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxBorrowLimit")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("MembershipDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Borrowers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            IsActive = true,
                            LastName = "Doe",
                            MaxBorrowLimit = 5,
                            MembershipDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "+1234567890"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            IsActive = true,
                            LastName = "Smith",
                            MaxBorrowLimit = 5,
                            MembershipDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "+1234567891"
                        },
                        new
                        {
                            Id = 3,
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            IsActive = true,
                            LastName = "Johnson",
                            MaxBorrowLimit = 5,
                            MembershipDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "+1234567892"
                        },
                        new
                        {
                            Id = 4,
                            Email = "alice.brown@example.com",
                            FirstName = "Alice",
                            IsActive = true,
                            LastName = "Brown",
                            MaxBorrowLimit = 5,
                            MembershipDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "+1234567893"
                        },
                        new
                        {
                            Id = 5,
                            Email = "charlie.davis@example.com",
                            FirstName = "Charlie",
                            IsActive = true,
                            LastName = "Davis",
                            MaxBorrowLimit = 5,
                            MembershipDate = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "+1234567894"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Borrowing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("BorrowerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("BorrowerId", "BookId", "BorrowDate");

                    b.ToTable("Borrowings", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Borrowing", b =>
                {
                    b.HasOne("Domain.Entities.Book", "Book")
                        .WithMany("Borrowings")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Borrower", "Borrower")
                        .WithMany("Borrowings")
                        .HasForeignKey("BorrowerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Borrower");
                });

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Navigation("Borrowings");
                });

            modelBuilder.Entity("Domain.Entities.Borrower", b =>
                {
                    b.Navigation("Borrowings");
                });
#pragma warning restore 612, 618
        }
    }
}
